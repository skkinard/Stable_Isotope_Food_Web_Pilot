color="white") +
geom_segment(data=env_vec%>%filter(p<0.05),
aes(x=0, y=0, xend=r2^2*axis1, yend=r2^2*axis2),
colour="black", size=1, linewidth=.5,
arrow=arrow(length=unit(0.1, "inches"),
type='closed')) +
geom_label(data=env_vec%>%filter(p<0.05),
aes(x=r2^2*axis1, y=r2^2*axis2, label=my_label),
colour="black") +
scale_x_continuous(expand = expansion(mult = c(0.2, 0.2)))
RDA_i_se
RDA_i_se <- RDA_i +
geom_point(data=spe_coor, aes(x=axis1, axis2),color='red', shape=4) +
geom_text_repel(data=spe_vec,
aes(x=axis1, y=axis2, label=vector),
colour="red",
force=40,
max.overlaps =20) +
geom_point(data=site_coor,
aes(x=axis1, y=axis2, fill=site),
color="black",
shape = 21,
size=7) +
geom_text(data=site_coor %>% filter(site %in% c('Semi-Arid', 'Transition')),
aes(x=axis1, y=axis2, label=month),
color="black") +
geom_text(data=site_coor %>% filter(site == 'Sub-Humid'),
aes(x=axis1, y=axis2, label=month),
color="white") +
geom_segment(data=env_vec%>%filter(p<0.05),
aes(x=0, y=0, xend=r2^2*axis1, yend=r2^2*axis2),
colour="black", size=1, linewidth=.5,
arrow=arrow(length=unit(0.1, "inches"),
type='closed')) +
geom_label(data=env_vec%>%filter(p<0.05),
aes(x=r2^2*axis1, y=r2^2*axis2, label=my_label),
colour="black") +
scale_x_continuous(expand = expansion(mult = c(0.2, 0.2)))
RDA_i_se
RDA_i_se <- RDA_i +
geom_point(data=spe_coor, aes(x=axis1, axis2),color='red', shape=4) +
geom_text_repel(data=spe_vec,
aes(x=axis1, y=axis2, label=vector),
colour="red",
force=100,
max.overlaps =20) +
geom_point(data=site_coor,
aes(x=axis1, y=axis2, fill=site),
color="black",
shape = 21,
size=7) +
geom_text(data=site_coor %>% filter(site %in% c('Semi-Arid', 'Transition')),
aes(x=axis1, y=axis2, label=month),
color="black") +
geom_text(data=site_coor %>% filter(site == 'Sub-Humid'),
aes(x=axis1, y=axis2, label=month),
color="white") +
geom_segment(data=env_vec%>%filter(p<0.05),
aes(x=0, y=0, xend=r2^2*axis1, yend=r2^2*axis2),
colour="black", size=1, linewidth=.5,
arrow=arrow(length=unit(0.1, "inches"),
type='closed')) +
geom_label(data=env_vec%>%filter(p<0.05),
aes(x=r2^2*axis1, y=r2^2*axis2, label=my_label),
colour="black") +
scale_x_continuous(expand = expansion(mult = c(0.2, 0.2)))
RDA_i_se
RDA_i_se <- RDA_i +
geom_point(data=spe_coor, aes(x=axis1, axis2),color='red', shape=4) +
geom_text_repel(data=spe_vec,
aes(x=axis1, y=axis2, label=vector),
colour="red",
alpha=.5
force=100,
RDA_i_se
RDA_i_se <- RDA_i +
geom_point(data=spe_coor, aes(x=axis1, axis2),color='red', shape=4) +
geom_text_repel(data=spe_vec,
aes(x=axis1, y=axis2, label=vector),
colour="red",
alpha=.5,
force=100,
max.overlaps =20) +
geom_text_repel(data=spe_vec,
aes(x=axis1, y=axis2, label=vector),
colour="red",
force=100,
max.overlaps =20,
min.segment.length = 100) +
geom_point(data=site_coor,
aes(x=axis1, y=axis2, fill=site),
color="black",
shape = 21,
size=7) +
geom_text(data=site_coor %>% filter(site %in% c('Semi-Arid', 'Transition')),
aes(x=axis1, y=axis2, label=month),
color="black") +
geom_text(data=site_coor %>% filter(site == 'Sub-Humid'),
aes(x=axis1, y=axis2, label=month),
color="white") +
geom_segment(data=env_vec%>%filter(p<0.05),
aes(x=0, y=0, xend=r2^2*axis1, yend=r2^2*axis2),
colour="black", size=1, linewidth=.5,
arrow=arrow(length=unit(0.1, "inches"),
type='closed')) +
geom_label(data=env_vec%>%filter(p<0.05),
aes(x=r2^2*axis1, y=r2^2*axis2, label=my_label),
colour="black") +
scale_x_continuous(expand = expansion(mult = c(0.2, 0.2)))
RDA_i_se <- RDA_i +
geom_point(data=spe_coor, aes(x=axis1, axis2),color='red', shape=4) +
geom_text_repel(data=spe_vec,
aes(x=axis1, y=axis2, label=vector),
colour="red",
alpha=.5,
force=100,
max.overlaps =20) +
geom_text_repel(data=spe_vec,
aes(x=axis1, y=axis2, label=vector),
colour="red",
force=100,
max.overlaps =20,
min.segment.length = 100) +
geom_point(data=site_coor,
aes(x=axis1, y=axis2, fill=site),
color="black",
shape = 21,
size=7) +
geom_text(data=site_coor %>% filter(site %in% c('Semi-Arid', 'Transition')),
aes(x=axis1, y=axis2, label=month),
color="black") +
geom_text(data=site_coor %>% filter(site == 'Sub-Humid'),
aes(x=axis1, y=axis2, label=month),
color="white") +
geom_segment(data=env_vec%>%filter(p<0.05),
aes(x=0, y=0, xend=r2^2*axis1, yend=r2^2*axis2),
colour="black", size=1, linewidth=.5,
arrow=arrow(length=unit(0.1, "inches"),
type='closed')) +
geom_label(data=env_vec%>%filter(p<0.05),
aes(x=r2^2*axis1, y=r2^2*axis2, label=my_label),
colour="black") +
scale_x_continuous(expand = expansion(mult = c(0.2, 0.2)))
RDA_i_se
RDA_i_se <- RDA_i +
geom_point(data=spe_coor, aes(x=axis1, axis2),color='red', shape=4) +
geom_text_repel(data=spe_vec,
aes(x=axis1, y=axis2, label=vector),
colour="red",
segment.color = "pink2",
alpha=.5,
force=100,
max.overlaps =20) +
geom_point(data=site_coor,
aes(x=axis1, y=axis2, fill=site),
color="black",
shape = 21,
size=7) +
geom_text(data=site_coor %>% filter(site %in% c('Semi-Arid', 'Transition')),
aes(x=axis1, y=axis2, label=month),
color="black") +
geom_text(data=site_coor %>% filter(site == 'Sub-Humid'),
aes(x=axis1, y=axis2, label=month),
color="white") +
geom_segment(data=env_vec%>%filter(p<0.05),
aes(x=0, y=0, xend=r2^2*axis1, yend=r2^2*axis2),
colour="black", size=1, linewidth=.5,
arrow=arrow(length=unit(0.1, "inches"),
type='closed')) +
geom_label(data=env_vec%>%filter(p<0.05),
aes(x=r2^2*axis1, y=r2^2*axis2, label=my_label),
colour="black") +
scale_x_continuous(expand = expansion(mult = c(0.2, 0.2)))
RDA_i_se
RDA_i_se <- RDA_i +
geom_point(data=spe_coor, aes(x=axis1, axis2),color='red', shape=4) +
geom_text_repel(data=spe_vec,
aes(x=axis1, y=axis2, label=vector),
colour="red",
segment.color = "pink2",
force=100,
max.overlaps =20) +
geom_point(data=site_coor,
aes(x=axis1, y=axis2, fill=site),
color="black",
shape = 21,
size=7) +
geom_text(data=site_coor %>% filter(site %in% c('Semi-Arid', 'Transition')),
aes(x=axis1, y=axis2, label=month),
color="black") +
geom_text(data=site_coor %>% filter(site == 'Sub-Humid'),
aes(x=axis1, y=axis2, label=month),
color="white") +
geom_segment(data=env_vec%>%filter(p<0.05),
aes(x=0, y=0, xend=r2^2*axis1, yend=r2^2*axis2),
colour="black", size=1, linewidth=.5,
arrow=arrow(length=unit(0.1, "inches"),
type='closed')) +
geom_label(data=env_vec%>%filter(p<0.05),
aes(x=r2^2*axis1, y=r2^2*axis2, label=my_label),
colour="black") +
scale_x_continuous(expand = expansion(mult = c(0.2, 0.2)))
RDA_i_se
RDA_i_se <- RDA_i +
geom_point(data=spe_coor, aes(x=axis1, axis2),color='red', shape=4) +
geom_text_repel(data=spe_vec,
aes(x=axis1, y=axis2, label=vector),
colour="red",
segment.color = "pink2",
force=100,
max.overlaps =20) +
geom_point(data=site_coor,
aes(x=axis1, y=axis2, fill=site),
color="black",
shape = 21,
size=7) +
geom_text(data=site_coor %>% filter(site %in% c('Semi-Arid', 'Transition')),
aes(x=axis1, y=axis2, label=month),
color="black") +
geom_text(data=site_coor %>% filter(site == 'Sub-Humid'),
aes(x=axis1, y=axis2, label=month),
color="white") +
geom_segment(data=env_vec%>%filter(p<0.05),
aes(x=0, y=0, xend=r2^2*axis1, yend=r2^2*axis2),
colour="black", size=1, linewidth=.5,
arrow=arrow(length=unit(0.1, "inches"),
type='closed')) +
geom_label(data=env_vec%>%filter(p<0.05),
aes(x=r2^2*axis1, y=r2^2*axis2, label=my_label),
colour="black") +
scale_x_continuous(expand = expansion(mult = c(0.2, 0.2)))
source('Rcal/00_setup_packages.R')
d <- read_csv("Rout/isotope_data_correctedH_correctedN.csv")
#----------------------------------------------------------------------------
# Calculate isotopic trophic level
#----------------------------------------------------------------------------
d <- d %>%
mutate(
trophic_level_N = ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_scaling = case_when(
nitrogen <= 0 ~ 0,
nitrogen <= 3.4 ~ nitrogen / 3.4,
nitrogen <= 7 ~ nitrogen / 3.5,
nitrogen <= 10.8 ~ nitrogen / 3.6,
nitrogen <= 14.8 ~ nitrogen / 3.7,
nitrogen > 14.8 ~ nitrogen / 3.8))
d
d <- d %>%
mutate(
trophic_level_N = 1 + ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_scaling = 1 + case_when(
nitrogen <= 0 ~ 0,
nitrogen <= 3.4 ~ nitrogen / 3.4,
nitrogen <= 7 ~ nitrogen / 3.5,
nitrogen <= 10.8 ~ nitrogen / 3.6,
nitrogen <= 14.8 ~ nitrogen / 3.7,
nitrogen > 14.8 ~ nitrogen / 3.8))
d
source("~/Documents/Research/Dissertation/02_Autochthony/Rcal/05_isotopic_TL_calc.R", echo=TRUE)
d <- read_csv("Rout/isotope_data_correctedH_correctedN.csv")
d <- d %>%
mutate(
trophic_level_N = 1 + ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_scaling = 1 + case_when(
nitrogen <= 0 ~ 0,
nitrogen <= 3.4 ~ nitrogen / 3.4,
nitrogen <= 7 ~ nitrogen / 3.5,
nitrogen <= 10.8 ~ nitrogen / 3.6,
nitrogen <= 14.8 ~ nitrogen / 3.7,
nitrogen > 14.8 ~ nitrogen / 3.8))
# create summary statistics for groups of comparison
tl_stats <- function(x) {
n_several <- x %>%
filter(kingdom == 'Animal') %>%
group_by(site, m_group) %>%
dplyr::summarize(n=length(trophic_level_N)) %>%
ungroup() %>%
group_by(m_group) %>%
dplyr::summarize(min_n = min(n)) %>%
ungroup() %>% filter(min_n>2) %>% pull(m_group) %>% unique()
x %>%
filter(kingdom == 'Animal') %>%
filter(m_group %in% n_several) %>%
group_by(site, m_group) %>%
dplyr::summarize(TL_mu = estimate_mu(trophic_level_N),
TL_lower = estimate_mu_lower(trophic_level_N),
TL_upper = estimate_mu_upper(trophic_level_N),
TL_n = length(trophic_level_N)) }
# Guild
TL_guild <- d %>%
rename(m_group = guild) %>%
tl_stats()
# Trophic Category
TL_TC <- d %>%
rename(m_group = trophic_category) %>%
tl_stats()
d %>%
rename(m_group = guild)
#----------------------------------------------------------------------------
# Calculate isotopic trophic level
#----------------------------------------------------------------------------
d <- d %>%
mutate(
trophic_level_N = 1 + ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_scaling = 1 + case_when(
nitrogen <= 0 ~ 0,
nitrogen <= 3.4 ~ nitrogen / 3.4,
nitrogen <= 7 ~ nitrogen / 3.5,
nitrogen <= 10.8 ~ nitrogen / 3.6,
nitrogen <= 14.8 ~ nitrogen / 3.7,
nitrogen > 14.8 ~ nitrogen / 3.8))
# create summary statistics for groups of comparison
tl_stats <- function(x) {
n_several <- x %>%
filter(kingdom == 'Animal') %>%
group_by(site, m_group) %>%
dplyr::summarize(n=length(trophic_level_N)) %>%
ungroup() %>%
group_by(m_group) %>%
dplyr::summarize(min_n = min(n)) %>%
ungroup() %>% filter(min_n>2) %>% pull(m_group) %>% unique()
x %>%
filter(kingdom == 'Animal') %>%
filter(m_group %in% n_several) %>%
group_by(site, m_group) %>%
dplyr::summarize(TL_mu = estimate_mu(trophic_level_N),
TL_lower = estimate_mu_lower(trophic_level_N),
TL_upper = estimate_mu_upper(trophic_level_N),
TL_n = length(trophic_level_N)) }
# Guild
TL_guild <- d %>%
rename(m_group = guild) %>%
tl_stats()
# Trophic Category
TL_TC <- d %>%
rename(m_group = trophic_category) %>%
tl_stats()
rlang::last_trace()
# create summary statistics for groups of comparison
tl_stats <- function(x) {
n_several <- x %>%
filter(kingdom == 'Animal') %>%
group_by(site, m_group) %>%
summarise(n = n()) %>%
ungroup() %>%
group_by(m_group) %>%
summarise(min_n = min(n)) %>%
ungroup() %>%
filter(min_n > 2) %>%
pull(m_group) %>%
unique()
x %>%
filter(kingdom == 'Animal') %>%
filter(m_group %in% n_several) %>%
group_by(site, m_group) %>%
summarise(
TL_mu = estimate_mu(trophic_level_N),
TL_lower = ifelse(length(trophic_level_N) > 1, estimate_mu_lower(trophic_level_N), NA),
TL_upper = ifelse(length(trophic_level_N) > 1, estimate_mu_upper(trophic_level_N), NA),
TL_n = n()
) %>%
ungroup()
}
# Guild
TL_guild <- d %>%
rename(m_group = guild) %>%
tl_stats()
# Trophic Category
TL_TC <- d %>%
rename(m_group = trophic_category) %>%
tl_stats()
source("~/Documents/Research/Dissertation/02_Autochthony/Rcal/05_isotopic_TL_calc.R", echo=TRUE)
d <- d %>%
mutate(
trophic_level_N = ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N = trophic_level_N +1,
trophic_level_N_scaling = case_when(
nitrogen <= 0 ~ 0,
nitrogen <= 3.4 ~ nitrogen / 3.4,
nitrogen <= 7 ~ nitrogen / 3.5,
nitrogen <= 10.8 ~ nitrogen / 3.6,
nitrogen <= 14.8 ~ nitrogen / 3.7,
nitrogen > 14.8 ~ nitrogen / 3.8),
trophic_level_N_scaling = trophic_level_N_scaling +1)
# create summary statistics for groups of comparison
tl_stats <- function(x) {
n_several <- x %>%
filter(kingdom == 'Animal') %>%
group_by(site, m_group) %>%
dplyr::summarize(n=length(trophic_level_N)) %>%
ungroup() %>%
group_by(m_group) %>%
dplyr::summarize(min_n = min(n)) %>%
ungroup() %>% filter(min_n>2) %>% pull(m_group) %>% unique()
x %>%
filter(kingdom == 'Animal') %>%
filter(m_group %in% n_several) %>%
group_by(site, m_group) %>%
dplyr::summarize(TL_mu = estimate_mu(trophic_level_N),
TL_lower = estimate_mu_lower(trophic_level_N),
TL_upper = estimate_mu_upper(trophic_level_N),
TL_n = length(trophic_level_N)) }
# Guild
TL_guild <- d %>%
rename(m_group = guild) %>%
tl_stats()
# Trophic Category
TL_TC <- d %>%
rename(m_group = trophic_category) %>%
tl_stats()
#----------------------------------------------------------------------------
# Calculate isotopic trophic level
#----------------------------------------------------------------------------
d %>% slice(1:4) %>%
mutate(trophic_level_N = ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_plus = trophic_level_N +1)
#----------------------------------------------------------------------------
# Calculate isotopic trophic level
#----------------------------------------------------------------------------
d %>% slice(1:4) %>%
mutate(trophic_level_N = ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_plus = trophic_level_N +1) %>%
select(starts_with('trophic'))
d <- read_csv("Rout/isotope_data_correctedH_correctedN.csv")
#----------------------------------------------------------------------------
# Calculate isotopic trophic level
#----------------------------------------------------------------------------
d %>% slice(1:4) %>%
mutate(trophic_level_N = ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_plus = trophic_level_N +1) %>%
select(starts_with('trophic'))
#----------------------------------------------------------------------------
# Calculate isotopic trophic level
#----------------------------------------------------------------------------
d %>% slice(1:4) %>%
mutate(trophic_level_N = ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_plus = trophic_level_N +1) %>%
select(starts_with('trophic'))%>%
filter(kingdom == 'Animal') %>%
group_by(site, m_group) %>%
dplyr::summarize(n=length(trophic_level_N)) %>%
ungroup() %>%
group_by(m_group) %>%
dplyr::summarize(min_n = min(n)) %>%
ungroup() %>% filter(min_n>2) %>% pull(m_group) %>% unique()
#----------------------------------------------------------------------------
# Calculate isotopic trophic level
#----------------------------------------------------------------------------
d %>% slice(1:4) %>%
mutate(trophic_level_N = ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_plus = trophic_level_N +1) %>%
select(starts_with('trophic'), everything())%>%
filter(kingdom == 'Animal') %>%
group_by(site, m_group) %>%
dplyr::summarize(n=length(trophic_level_N)) %>%
ungroup() %>%
group_by(m_group) %>%
dplyr::summarize(min_n = min(n)) %>%
ungroup() %>% filter(min_n>2) %>% pull(m_group) %>% unique()
d %>% slice(1:4) %>%
mutate(trophic_level_N = ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_plus = trophic_level_N +1) %>%
select(starts_with('trophic'), everything())%>%
filter(kingdom == 'Animal')
d %>% slice(1:4) %>%
mutate(trophic_level_N = ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_plus = trophic_level_N +1) %>%
select(starts_with('trophic'), everything())%>%
filter(kingdom == 'Animal') %>%
group_by(site, trophic_category) %>%
dplyr::summarize(n=length(trophic_level_N))
#----------------------------------------------------------------------------
# Calculate isotopic trophic level
#----------------------------------------------------------------------------
d %>% slice(1:4) %>%
mutate(trophic_level_N = ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_plus = trophic_level_N +1) %>%
select(starts_with('trophic'), everything())%>%
filter(kingdom == 'Animal') %>%
group_by(site, trophic_category) %>%
dplyr::summarize(n=length(trophic_level_N)) %>%
ungroup() %>%
group_by(trophic_category) %>%
dplyr::summarize(min_n = min(n)) %>%
ungroup() %>% filter(min_n>2) %>% pull(m_group) %>% unique()
#----------------------------------------------------------------------------
# Calculate isotopic trophic level
#----------------------------------------------------------------------------
d %>% slice(1:4) %>%
mutate(trophic_level_N = ifelse(nitrogen <= 0, 0, nitrogen / 3.4),
trophic_level_N_plus = trophic_level_N +1) %>%
select(starts_with('trophic'), everything())%>%
filter(kingdom == 'Animal') %>%
group_by(site, trophic_category) %>%
dplyr::summarize(n=length(trophic_level_N)) %>%
ungroup() %>%
group_by(trophic_category) %>%
dplyr::summarize(min_n = min(n)) %>%
ungroup() %>% filter(min_n>2) %>% pull(trophic_category) %>% unique()
TL_all
source("~/Documents/Research/Dissertation/02_Autochthony/Rcal/05_isotopic_TL_calc.R", echo=TRUE)
TL_trim
# fig_Isotopic_TL
# Sean Kinard
# last edit: 2023-05-19
#----------------------------------------------------------------------------
# Setup
#----------------------------------------------------------------------------
source('Rcal/00_setup_packages.R')
d <- read_csv('Rout/TL_signif.csv')
d
source("~/Documents/Research/Dissertation/02_Autochthony/Rfig/fig_isotopic_TL.R", echo=TRUE)
